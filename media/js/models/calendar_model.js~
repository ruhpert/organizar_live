var Calendar_Model = (function(_this, $) {

	var curr_day = null;
	var active_day = null;
	var next_day = null;
	var prev_day = null;
	var prev_week_day = null;
	var next_week_day = null;
	var events = null;
	var cal_date = null;
	var action_go_to_pre_week = null;
	var action_go_to_next_week = null;
	var action_go_to_next_day = null;
	var action_go_to_prev_day = null;
	var action_go_to_today = null;
	var action_show_date = null;
	var action_sort_by_lead = null;
	var action_sort_by_room = null;
	var day_from_session = null;
	var SORT_BY = "room";

	_this.goToDay = function(date) {

		console.log("go to date ", date);
		console.log("day " + date.getDate());

		render(date);

		var wanted_day = date;
		var weekday=new Array("Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag");
		var found_a_event = false;
		var D = weekday[date.getDay()];
		var string_date = D + " " + (date.getDate()) + "." + (date.getMonth() + 1) + "." + date.getFullYear();

		cal_date.text(string_date);
		events = $(".event");

		$.each(events, function(key, event) {
			event = $(event);
			var string_date = event.data("date");
			var event_day = new Date(string_date);
			if (event_day - wanted_day == 0) {
				found_a_event = true;
			}
		});
	}

	_this.init = function() {
		curr_day = new Date();
		curr_day.setHours(23);
		curr_day.setMinutes(0);
		curr_day.setSeconds(0);
		curr_day.setMilliseconds(0);
		day_from_session = $.cookie('last_calendar_day');

		// set active day
		if (typeof day_from_session == "undefined" || day_from_session == "Invalid Date") {
			active_day = curr_day;
		}
		else {
			console.log("using day from session");
			day_from_session = new Date(day_from_session);
			active_day = day_from_session;
		}

		// render active day
		render(active_day);

		// setup dates and times
		next_day = new Date(active_day.getTime() + (24 * 60 * 60 * 1000));
		prev_day = new Date(active_day.getTime() - (24 * 60 * 60 * 1000));
		next_week_day = new Date(active_day.getTime() + ((24 * 60 * 60 * 1000) * 7));
		prev_week_day = new Date(active_day.getTime() + ((24 * 60 * 60 * 1000) * 7));

		// setup selectors
		events = $(".event");
		action_go_to_next_week = $("#next-week");
		action_go_to_pre_week = $("#prev-week");
		action_go_to_next_day = $("#next-day");
		action_go_to_pre_day = $("#prev-day");
		action_go_to_today = $("#cal-go-to-today");
		action_sort_by_lead = $("#cal-action-sort-by-lead");
		action_sort_by_room  = $("#cal-action-sort-by-room");

		cal_date = $("#cal-date");
		action_show_date = $("#cal-action-show-date");

		// activate click listener
		setup_listener();

		console.log("ACTIVE DAY ON INIT " + active_day);

		// show date
		_this.goToDay(active_day);
		reset();

		printCalendar();
	}
	
	function reset() {
		next_day = new Date(active_day.getTime() + (24 * 60 * 60 * 1000));
		prev_day = new Date(active_day.getTime() - (24 * 60 * 60 * 1000));
		next_week_day = new Date(active_day.getTime() + ((24 * 60 * 60 * 1000) * 7));
		prev_week_day = new Date(active_day.getTime() - ((24 * 60 * 60 * 1000) * 7));
		$.cookie('last_calendar_day', active_day);

		// show hide event details
		events = $(".event");
		events.mouseenter(function() {
			var event = $(this);
			var hidden_data = event.find(".hidden-data");
			if (hidden_data.hasClass("hidden")) {
				$(".hidden-data").addClass("hidden");
				hidden_data.removeClass("hidden");
			}
			else{

			}
		}).mouseleave(function() {
			$(".hidden-data").addClass("hidden");
		});


		var active_comment_buttons = $(".comment.button.active");console.log("active_comment_buttons " +active_comment_buttons);
		active_comment_buttons.mouseenter(function() {
			var hovered_button = $(this);
			var hidden_comment = hovered_button.find(".hidden-comment");
			hidden_comment.removeClass("hidden");
		}).mouseleave(function() {
			var hovered_button = $(this);
			var hidden_comment = hovered_button.find(".hidden-comment");
			hidden_comment.addClass("hidden");
		});
	}


	function setup_listener() {
		action_go_to_today.click(function() {
			_this.goToDay(curr_day);
			active_day = curr_day;
			reset();
		});
		action_go_to_next_week.click(function() {
			_this.goToDay(next_week_day);
			active_day = next_week_day;
			reset();
		});
		action_go_to_pre_week.click(function() {
			_this.goToDay(prev_week_day);
			active_day = prev_week_day;
			reset();
		});
		action_go_to_next_day.click(function() {
			_this.goToDay(next_day);
			active_day = next_day;
			reset();
		});
		action_go_to_pre_day.click(function() {
			_this.goToDay(prev_day);
			active_day = prev_day;
			reset();
		});
		action_sort_by_lead.click(function() {
			SORT_BY = "lead";
			_this.goToDay(active_day);
			reset();
		});
		action_sort_by_room.click(function() {
			SORT_BY = "room";
			_this.goToDay(active_day);
			reset();
		});

		action_show_date.click(function() {
			var string_date = $("#cal-go-to-date").val();
			string_date = string_date.split(".");
			string_date = string_date[2] + "-" + string_date[1] + "-" + string_date[0];
			var wanted_date = new Date(string_date);
			_this.goToDay(wanted_date);
			active_day = wanted_date;
			reset();
		});
	}



	
	function render(date) {
		var final_output = "";
		var found_a_event = false;
		var template_events_by_teacher = '<ul class="events">';
		var events_by_day =  ALL_EVENTS[0];
		var sorted_events = {};

		$.each(events_by_day, function(key, event) {

			if ($(event).size() > 1) {
				$.each(event, function(_key, ev){
					print(ev);
				});
			}
			else{
				event = event[0];
				print(event);
			}
		});
		
		function print(passed_event) {
			var _date = passed_event.date_as_utc;
			var lead = passed_event.lead;
			var data = "";
			var output = "";
			_date = new Date(_date);
			var string_date = _date.getDate() + "." + (1 + _date.getMonth()) + "." + _date.getFullYear();
			var string_date2 = date.getDate() + "." + (1 + date.getMonth()) + "." + date.getFullYear();
			var sort_by_date = false;
			var sort_by_lead = true;
			var sort_by_room = true;

			if (SORT_BY == "room") {
				sort_by_room = true;
				sort_by_lead = false;
			}
			else if (SORT_BY == "lead") {
				sort_by_lead = true;
			}

			


			if (string_date == string_date2) {
				found_a_event = true;
				//console.log("rendering event ", passed_event);
				output = Mustache.render(Calendar_View.template_event, passed_event);

				if (typeof output != "undefined") {

					var key = "";

					// sort by date
					if (sort_by_date) {
						console.log("SORTING BY DATE");
						key = string_date
					}
					// sort by lead
					else if (sort_by_lead) {
						key = lead;
						console.log("SORTING BY LEAD");
					}
					// sort by room
					else {
						key = passed_event.room
						console.log("SORTING BY ROOM");					
					}

					if (!(key in sorted_events)) {
						output = output;//"<b>" + key + "</b> " + output
						sorted_events[key] = output;
					}else{
						data = sorted_events[key];
						sorted_events[key] = data + output;
					}
				}
			}

		}
		var nbr_of_keys = 0;
		$.each(sorted_events, function(key, data) {
			template_events_by_teacher += '<li class="sort"><ul>' + data + '</ul></li>';
			nbr_of_keys += 1
		});
		template_events_by_teacher += "</ul>";
		events_by_day = {"events" : events_by_day};


		$("#events").html(template_events_by_teacher);
		console.log("SORT BY 1 " + SORT_BY);
		if (! found_a_event) {
			$("#cal-message").html("<br/><br/><h3>Es gibt bisher keine Stunden an diesem Tag!</h3>");
		}
		else if (SORT_BY == "room") {	
			var now = new Date();
			var go_to_minuts = now.getMinutes();
			var go_to_hours = now.getHours();
			var go_to = calc_y(go_to_hours, go_to_minuts);
			 $('html,body').animate({scrollTop:go_to}, 2000,'swing');

			$("#time-raster").show();
			$("#page").css("width", "96%");
			$("#cal-message").html("");
			console.log("nbr_of_keys " + nbr_of_keys);
			if (nbr_of_keys > 12) {
				//$("#page").css("width", "140%");
			}

			var events = $(".event");	
			console.log("found " + events.size());	
			var event_list = [];
			$.each(events, function(key, event) {
				console.log("-----------------------");
				event = $(event);

				var extra = 0;
				var time = event.find(".time").first();
				var room = event.data("room");

				time = time.text().split(" bis ");

				var start_time = time[0];
				var start_time_hours = parseInt(start_time.split(":")[0]);
				var start_time_minutes = parseInt(start_time.split(":")[1]);
				var end_time = time[1];
				var end_time_hours = parseInt(end_time.split(":")[0]);
				var end_time_minutes = parseInt(end_time.split(":")[1]);
				var value = start_time_hours+":"+start_time_minutes+"R"+room;
				var extra_height = getExtaHeight(start_time_hours, start_time_minutes, end_time_hours, end_time_minutes);
				console.log("$.inArray(value, event_list) " + $.inArray(value, event_list));

				if ($.inArray(value, event_list) > -1) {
					event.addClass("alert");
					console.log("RED RED RED ");
					extra = 40;
				}else{
					event_list[key] = value;
				}				

				console.log("start_time_hours " + start_time_hours);
				console.log("start_time_minutes " + start_time_minutes);
				console.log("end_time_hours " + end_time_hours);
				console.log("end_time_minutes " + end_time_minutes);
				console.log("y " + calc_y(start_time_hours, start_time_minutes));
				console.log("x " + calc_x(room));
				console.log("extra_height " + extra_height);
				var height = 140 + parseInt(extra_height);
				console.log("Height " + height);
				event.css({
					"position"	: "absolute",
					"left"		: (calc_x(room)) + "px",			
					"top"		: (calc_y(start_time_hours, start_time_minutes) + extra) + "px",
					"height"	: height + "px"
				});
				console.log("setted event css", event);
			});
		}
		else {
			$("#time-raster").hide();
			$("#page").css("width", "140%");
			$('html,body').animate({scrollTop:0}, 2000,'swing');
		}
	}


	function getExtaHeight(hoursA, minutesA, hoursB, minutesB) {
		console.log("EXTRA HEIGHT");
		var height = 0;
		var delta = hoursA * 60 + minutesA - hoursB * 60 - minutesB;
		var x = 4;//3.4;
		delta = (delta > 0) ? delta : delta * -1;
		console.log("DELTA : " + (delta));
		if (delta > 45) {
			var alpha = (hoursB * 60 * x - minutesB * x) - (hoursA * 60 * x + minutesA * x);
			console.log("ALPHA " + ((hoursB * 60 * x - minutesB * x) - (hoursA * 60 * x + minutesA * x)));
			if (alpha == 0) {
				height = (160/3);
			}
			else {
				height = (alpha - 160);
			}
			
			height = (height > 0) ? height : height * -1;
		}
	
		return height;
	}

	function calc_y(hours, minutes) {
		var x = 4;
		var yPX = 0;
		var minutesPX = 0;
		var elem_height = 160 + 10 + 10;

		if (hours < 10) {
			hours = hours + 12;
		}

		yPX = ((hours * 60 + minutes) - 10 * 60) * x;

		/*hours = hours - 10;
		hours = (hours == 0) ? 1 : hours;

		console.log("minutes " + minutes);
		if (minutes > 0) {
			var factor = (minutes / 25);
			var x = elem_height / 4;
			minutesPX = factor * x;
		}
		console.log("minutes " + minutes);
		yPX = (hours) * elem_height + minutesPX;*/

		return yPX;
	}

	function calc_x(room) {
		var xPX = 0;
		var elem_width = 140 + 10 + 10;
		xPX = room * elem_width;

		return xPX;
	}

	var sort_by = function(field, reverse, primer){

	   var key = primer ? 
	       function(x) {return primer(x[field])} : 
	       function(x) {return x[field]};

	   reverse = [-1, 1][+!!reverse];

	   return function (a, b) {
	       return a = key(a), b = key(b), reverse * ((a > b) - (b > a));
	     } 

	}

	// Print Calendar
	var printCalendar = function() {
		var target = $("#time-raster");
		var minute = 0;
		var hour = 10;
		var interval = 15;
		var htmlOutput = "";
		var header = "<table><tr>" +
						"<th>Zeit / Räume</th>" +
						"<th class=\"room\">Raum 1</th>" +
						"<th class=\"room\">Raum 2</th>" +
						"<th class=\"room\">Raum 3</th>" +
						"<th class=\"room\">Raum 4</th>" +
						"<th class=\"room\">Raum 5</th>" +
						"<th class=\"room\">Raum 6</th>" +
						"<th class=\"room\">Raum 7</th>" +
					"</tr>";

		htmlOutput = header;

		for (var i = 0; i < 60; i++) {
			var newMinute = minute + interval;
			var nextMinute = null;
			var nextHour = null;
			var formerMinute = minute;
			var formerHour = hour;

			if (newMinute > (interval * 3)) {
				minute = 0;
			}
			else {
				minute = minute + interval;
			}

			if (minute == 0) {
				hour = hour + 1;
			}
			else {
				hour = hour;
			}

			if (hour < 10) {
				nextHour = "0" + hour;
			}
			else {
				nextHour = hour;
			}

			if (minute < 10) {
				nextMinute = "0" + minute;
			}
			else {
				nextMinute = minute;
			}

			if (formerHour < 10) {
				formerHour = "0" + formerHour;
			}

			if (formerMinute < 10) {
				formerMinute = "0" + formerMinute;
			}

			var html =
				"<tr>"
				+	"<td class='row' data-event='load(forms/form-new-event.html)'>" + formerHour + ":" + formerMinute + "</td>" //"-" + nextHour + ":" + nextMinute + "
				+	"<td class='row' data-event='load(forms/form-new-event.html)'></td>"
				+	"<td class='row' data-event='load(forms/form-new-event.html)'></td>"
				+	"<td class='row' data-event='load(forms/form-new-event.html)'></td>"
				+	"<td class='row' data-event='load(forms/form-new-event.html)'></td>"
				+	"<td class='row' data-event='load(forms/form-new-event.html)'></td>"
				+	"<td class='row' data-event='load(forms/form-new-event.html)'></td>"
				+ "</tr>";

			htmlOutput = htmlOutput + html;


		}
		htmlOutput = htmlOutput + "</table>";
		target.append(htmlOutput);
	}




	return _this;

}({}, jQuery));
